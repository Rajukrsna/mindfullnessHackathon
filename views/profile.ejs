<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Meditation Practices</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/public/styles/style.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />
</head>
<body>
  <div class="container">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <a class="navbar-brand" href="#">
        <img src="/public/images/med.png" alt="App Logo" width="30" height="30" class="d-inline-block align-top">
        Serenity
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              <img src="/public/images/defImg.jpg" alt="Profile" width="30" height="30" class="rounded-circle">
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="/profile">View Profile</a></li>
            </ul>
          </li>
        </ul>
      </div>
    </nav>

    <div class="row mt-4">
      <div class="col-md-8 offset-md-2">
        <h2 class="mb-4">Your Meditation Practices</h2>
        <table class="table table-bordered table-striped">
          <thead>
            <tr>
              <th>Practice Name</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            <% practice.forEach((item, index) => { %>
              <tr>
                <td><%= item.name %></td>
                <td class="text-center">
                  <button class="btn btn-primary btn-practice" data-bs-toggle="modal" data-bs-target="#meditationModal" data-index="<%= index %>">Practice Now</button>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>

    <!-- Meditation Modal -->
    <div class="modal fade" id="meditationModal" tabindex="-1" aria-labelledby="meditationModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="meditationModalLabel">Meditation Practice</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body text-center">
            <div id="videoContainer" class="mb-3"></div>
            <p id="meditationDescription" class="text-muted"></p>
            <button id="playAudioBtn" class="btn btn-secondary mb-3">Play Instructions</button>
            <div id="timer" class="text-primary h4">15:00</div>
            <div class="btn-group mt-3">
              <button id="startPauseTimerBtn" class="btn btn-success">
                <i id="playIcon" class="bi bi-play-circle"></i> Start Meditation
              </button>
              <button id="pauseTimerBtn" class="btn btn-warning" style="display: none;">
                <i id="pauseIcon" class="bi bi-pause-circle"></i> Pause
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap and JS Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>

  <script>
   // Event listener for closing the modal
const meditationModal = document.getElementById("meditationModal");

meditationModal.addEventListener('hidden.bs.modal', function () {
  const videoContainer = document.getElementById("videoContainer");
  const audio = window.speechSynthesis;

  // Stop video by resetting the iframe src
  videoContainer.innerHTML = '';

  // Stop any ongoing speech synthesis
  audio.cancel();
});
    // Parse practices data from EJS
    const parsedPractices = <%- JSON.stringify(practice) %>;

    // Event listener for "Practice Now" buttons
    document.querySelectorAll('.btn-practice').forEach(button => {
      button.addEventListener('click', function () {
        const practiceIndex = this.getAttribute('data-index');
        const practice = parsedPractices[practiceIndex];
        openMeditationModal(practice);
      });
    });

    function openMeditationModal(practice) {
      const videoContainer = document.getElementById("videoContainer");
      const meditationDescription = document.getElementById("meditationDescription");
      const timerDisplay2 = document.getElementById("timer");

      // Reset modal content
      videoContainer.innerHTML = '';
      meditationDescription.textContent = '';
      timerDisplay2.textContent = '15:00';

// Add video element
videoContainer.innerHTML = `
  <div class="video-embed-container">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/${practice.videoUrl.split('/').pop()}" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
  </div>
`;

      // Add description
      meditationDescription.textContent = practice.description;

      // Play audio description
      document.getElementById("playAudioBtn").addEventListener("click", () => {
        const utterance = new SpeechSynthesisUtterance(practice.description);
        utterance.lang = "en-US";
        window.speechSynthesis.speak(utterance);
      });

     

              // Initialize timer
              let timer;
let isRunning = false; // Timer state
let timeLeft = 15 * 60; // 15 minutes in seconds
let timerDisplay = document.getElementById("timer");
let playIcon = document.getElementById("playIcon");
let pauseIcon = document.getElementById("pauseIcon");

document.getElementById("startPauseTimerBtn").addEventListener("click", () => {
    if (isRunning) {
        // If timer is already running, pause it
        clearInterval(timer);
        document.getElementById("pauseTimerBtn").style.display = "none"; // Hide Pause button
        document.getElementById("startPauseTimerBtn").style.display = "inline-block"; // Show Start button
        isRunning = false;
        playIcon.style.display = "inline-block"; // Show Play button
        pauseIcon.style.display = "none"; // Hide Pause button
    } else {
        // If timer is not running, start or resume it
        document.getElementById("startPauseTimerBtn").style.display = "none"; // Hide Start button
        document.getElementById("pauseTimerBtn").style.display = "inline-block"; // Show Pause button
        playIcon.style.display = "none"; // Hide Play button
        pauseIcon.style.display = "inline-block"; // Show Pause button

        timer = setInterval(() => {
            const minutes = Math.floor(timeLeft / 60);
            const seconds = timeLeft % 60;
            timerDisplay.textContent = `${minutes}:${seconds < 10 ? "0" + seconds : seconds}`;
            timeLeft -= 1;

            if (timeLeft < 0) {
                clearInterval(timer);
                timerDisplay.textContent = "Session Completed!";
                // Voice feedback when session is completed
                const speech = new SpeechSynthesisUtterance("Session completed. Well done!");
                window.speechSynthesis.speak(speech);
            }
        }, 1000);

        isRunning = true;
    }
});

// Pause button functionality
document.getElementById("pauseTimerBtn").addEventListener("click", () => {
    if (isRunning) {
        clearInterval(timer);
        document.getElementById("pauseTimerBtn").style.display = "none"; // Hide Pause button
        document.getElementById("startPauseTimerBtn").style.display = "inline-block"; // Show Start button
        playIcon.style.display = "inline-block"; // Show Play button
        pauseIcon.style.display = "none"; // Hide Pause button
        isRunning = false;
    }
});
    }
  </script>
</body>
</html>
